class Pokemon:
  def __init__(self,name, level, type, max_health):
    self.name = name
    self.level = level
    self.type = type
    self.max_health = max_health
    self.health = max_health
    self.ko = False

  def lose_health(self):
    self.health-=10
    print(f"{self.name} just lost 10 health")
    if self.health == 0:
      self.knock_out(self)

  def gain_health(self):
    self.health+=10
    print(f"{self.name} just gained 10 health")
  
  def knock_out(self):
    self.ko = True
    print(f"{self.name} was knocked out")

  def revive(self):
    self.ko = False
    print(f"{self.name} was revived")
  
  def attack(self,pokemon):
    if self.ko:
      print(f"{self.name} is ko")
    if self.type == pokemon.type:
      pokemon.health -= self.level
      print(f"{pokemon.name} lost {pokemon.level} health {pokemon.health}/{pokemon.max_health}")
      
    if self.type == "grass":
      pokemon.health-=0.5*self.level
      print(f"{pokemon.name} lost {pokemon.level*0.5} health {pokemon.health}/{pokemon.max_health}")
     
    if self.type == "water" and pokemon.type == "fire":
      pokemon.health-=0.5*self.level
      print(f"{pokemon.name} lost {pokemon.level*0.5} health {pokemon.health}/{pokemon.max_health}")
      
    if self.type == "water" and pokemon.type == "grass":
      pokemon.health-=2*self.level
      print(f"{pokemon.name} lost {pokemon.level*2} health {pokemon.health}/{pokemon.max_health}")
      
    if self.type == "fire" and pokemon.type == "grass":
      pokemon.health-=2*self.level
      print(f"{pokemon.name} lost {pokemon.level*2} health {pokemon.health}/{pokemon.max_health}")

    if self.type == "fire" and pokemon.type == "water":     
      pokemon.health-=0.5*self.level
      print(f"{pokemon.name} lost {pokemon.level*0.5} health {pokemon.health}/{pokemon.max_health}")

  def __repr__(self):
    return self.name

class Trainer:
  def __init__(self,name,potions, pokemons):
    self.name = name
    self.potions = potions
    self.pokemons = pokemons
    self.active = pokemons[0]
  
  def takePotion(self):
    if self.active.health == self.active.max_health:
      print(f"{self_active} has full energy")
    else:
      self.active.gain_Health();
  
  def switchActive(self,index):
    if index >= len(self.pokemons) or index < 0 :
      print(f"Pokemon does not exist")
    elif self.pokemons[index].ko:
      print(f"Pokemon is ko")
    else:
      self.active.name = self.pokemons[index]
      print(f"{self.name} active pokemon changed to {self.active.name}")
  
  def attack(self,trainer):
    print(f"{self.active.name} attacks {trainer.active.name}")
    self.active.attack(trainer.active)
  
  
bulbazur = Pokemon("Bulbazur", 1, "water", 2)
pikachu = Pokemon("Pikachu", 1, "grass", 3)
charizard = Pokemon("Charizard", 1, "fire", 2)
Ash = Trainer("Ash", 4, [pikachu,charizard,bulbazur])
Erika = Trainer("Erika", 3, [bulbazur,pikachu,charizard])
Ash.attack(Erika);
Ash.attack(Erika);
Erika.attack(Ash);
Erika.attack(Ash);
Ash.attack(Erika)
